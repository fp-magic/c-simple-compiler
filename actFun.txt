<program> := initAll() <declaration_list>
<declaration_list> := <declaration> <declaration_list_tail>
<declaration_list_tail> := <declaration> <deliaration_list_tail>
                         | <empty>
<declaration> := <var_declaration>
               | <fun_declaration>
<var_declaration> := <type_specifier> ID ; addNum()
                   | <type_specifier> ID [ NUM addArray() ] ;
<type_specifier> := int
                  | void
<fun_declaration> := <type_specifier> ID addFun() ( <params> ) <compound_stmt> backFun()
<params> := <param_list>
          | void
<param_list> := <parm> <parm_list_tail>
<parm_list_tail> := , <param> <parm_list_tail>
                  | <empty>
<param> := <type_specifier> ID addNum()
         | <type_specifier> ID [ ] addArray()
<compound_stmt> := { <local_declarations> <statement_list> }
<local_declarations> := <var_declaration> <local_declarations_tail>
                      | <empty>
<local_declarations_tail> := <var_declaration> <local_declarations_tail>
                           | <empty>
<statement_list> := <statement> <statement_list_tail>
                  | <empty>
<statement_list_tail> := <statement> <statement_list_tail>
                       | <empty>
<statement> := <expression_stmt>
             | <compound_stmt>
             | <selection_stmt>
             | <iteration_stmt>
             | <return_stmt>
<expression_stmt> := <expression> ;
                   | ;
<selection_stmt> := if ( <expression> exIf() ) <statement> exIe()
                  | if ( <expression> exIf() ) <statement> else exEl() <statement> exIe()
<iteration_stmt> := while exWh() ( <expression> exDo() ) <statement> exWe()
<return_stmt> := return retNonum() ;
               | return <expression> retNum() ;
<expression> := <var> = <expression> alGeq()
              | <simple_expression>
<var> := ID alPush()
       | ID [ <expression> ] alPush()
<simple_expression> := <additive_expression> <relop> <additive_expression> alGeq()
                     | <additive_expression>
<relop> := <=
         | <
         | >
         | >=
         | ==
         | !=
<additive_expression> := <term> <additive_expression_tail>
<additive_expression_tail> := <addop> <term> alGeq() <additive_expression_tail>
                            | <empty>
<addop> := +
         | -
<term> := <factor> <term_tail>
<term_tail> := <mulop> <factor> alGeq() <term_tail>
             | <empty>
<mulop> := *
         | /
<factor> := ( <expression> )
          | <var>
          | <call>
          | NUM addCon() alPush()
<call> := ID ( callBegin() <args> ) callEnd()
<args> := <arg_list>
        | <empty>
<arg_list> := <expression> callParam() <arg_list_tail>
<arg_list_tail> := , <expression> callParam() <arg_list_tail>
                 | <empty>
